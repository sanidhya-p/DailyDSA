#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };


*****************************************************************/

// void solve(LinkedListNode<int>* &head,LinkedListNode<int> * &curr,LinkedListNode<int> * &prev){
//     if(curr== NULL){
//         head=prev;
//         return;
//     }
//     LinkedListNode<int> *forward=curr->next;
//     solve(head,forward,curr);

//     curr->next=prev;

// }
// LinkedListNode<int> *reverse1(LinkedListNode<int>* head){
//     if(head==NULL || head->next==NULL){
//         return head;
//     }
//     LinkedListNode<int>*smhead=reverse1(head->next);
//     head->next->next=head->next;
//     head->next=NULL;
    
//     return smhead;
// }

LinkedListNode<int> *reverseLinkedList(LinkedListNode<int> *head) 
{
    //recursive approach
    // LinkedListNode<int> * prev=NULL;
    // LinkedListNode<int> * curr=head;
    // solve(head,curr,prev);
    
    // iterative approach
    if(head==NULL||head->next==NULL){
        return head;
    }

    LinkedListNode<int> * prev=NULL;
    LinkedListNode<int> * curr=head;
    LinkedListNode<int>*Forward= NULL; 
    while(curr!=NULL){
        Forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=Forward;
    }
    return prev;

}
