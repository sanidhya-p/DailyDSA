#include<iostream>
using namespace std;

int partition(int arr[], int s , int e){
    int count=0;
    int pivot=arr[s];
    for (int  i = s+1; i <= e; i++)
    {
        if (arr[i]<=pivot)
        {
            count++;
        }
    }
    swap(arr[s],arr[s+count]);
    
    int i=s;
    int j=e;
    int pivotIndex=s+count;
    while(i < pivotIndex && j > pivotIndex) {

        while(arr[i] <= pivot) 
        {
            i++;
        }

        while(arr[j] > pivot) {
            j--;
        }

        if(i < pivotIndex && j > pivotIndex) {
            swap(arr[i++], arr[j--]);
        }

    }
    return pivotIndex;
    
    
    
}
void quicksort(int arr[],int s, int e){
    if (s>=e)
    {
        return;
    }
    int p= partition(arr,s,e);
    // left part
    quicksort(arr,s,p-1);
    quicksort(arr,p+1,e);
    
}
int main()
{
    int arr[5]={4,1,3,5,2};
    quicksort(arr,0,4);
    for (int i = 0; i < 5; i++)
    {
        cout<<arr[i]<<" ";
    }cout<<endl;

    return 0;
}
