Node* floydDetectloop(Node*head){
    if (head==NULL)
    {
        return NULL;
    }
    Node*fast=head;
    Node*slow=head;
    while (slow!=NULL && fast!=NULL)
    {
        fast=fast->next;
        if(fast!=NULL){
            fast=fast->next;
        }
        slow=slow->next;

        if (slow==fast)
        {
            cout<<"Present at"<<slow->data<<endl;
            return slow;
        }       
    }
    return NULL;   
}
Node* getStartingNode(Node*head){
    if (head==NULL)
    {
        return NULL;
    }
    Node*intersection=floydDetectloop(head);
    Node*slow=head;

    while (slow!=intersection)
    {
        slow=slow->next;
        intersection=intersection->next;
    }

    return slow;
    
    
}
