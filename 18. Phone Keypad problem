class Solution {
public:
    void Solve(vector <string> &ans,string output,int index,string map[],string digits) {
        // base case
        if(index>=digits.length()){
            ans.push_back(output);
            return;
        }
        int number= digits[index]-'0';
        string value= map[number];
        for(int i=0; i<value.length(); i++){
            output.push_back(value[i]);
            Solve(ans,output,index+1,map,digits);
            output.pop_back();
        }

    }
    
    vector<string> letterCombinations(string digits) {
        vector <string> ans;
        if(digits.length()==0)
            return ans;
        string output;
        int index =0;
        string map[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        Solve(ans,output,index,map,digits);
        
        return ans;
    }
};
https://leetcode.com/problems/letter-combinations-of-a-phone-number/submissions/875356118/
